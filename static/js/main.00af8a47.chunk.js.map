{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem.js","services/imageAPI.js","components/Button/Button.js","components/ImageGallery/ImageGallery.js","App.js","index.js"],"names":["Searchbar","state","query","handleChange","e","setState","target","value","handleSubmit","preventDefault","trim","props","onSubmit","toast","error","className","this","type","onChange","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","id","tags","webformatURL","src","alt","api","fetchImage","page","url","axios","get","then","response","console","log","status","data","hits","Promise","reject","Error","Button","onClick","ImageGallery","images","loader","handleClickLoadMore","prevState","scrollToBottom","window","scrollTo","top","document","documentElement","scrollHeight","behavior","prevProps","prevSearchQuery","nextSearchQuery","prevPage","nextPage","imageAPI","length","warn","catch","map","index","visible","color","height","width","message","App","handleSearch","position","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.00af8a47.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { toast } from 'react-toastify';\n\nclass Searchbar extends Component {\n  state = {\n    query: '',\n  };\n  handleChange = e => {\n    this.setState({ query: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.query.trim() === '') {\n      toast.error('This field cannot be empty');\n      return;\n    }\n\n    this.props.onSubmit(this.state.query);\n    this.setState({ query: '' });\n  };\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            onChange={this.handleChange}\n            value={this.state.query}\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","export default function ImageGalleryItem({ id, tags, webformatURL }) {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        id={id}\n        src={webformatURL}\n        alt={tags}\n        className=\"ImageGalleryItem-image\"\n      />\n    </li>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = '19184321-ac300e61d51c0cc0f6b691bfb';\n\nconst fetchImage = (query, page) => {\n  const url = `${BASE_URL}?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n  return axios.get(url).then(response => {\n    console.log(response);\n    if (response.status >= 200 && response.status < 300) {\n      return response.data.hits;\n    }\n    return Promise.reject(new Error(`Нет покемона с именем ${query}`));\n  });\n};\n\nconst api = { fetchImage };\nexport default api;\n","// import PropTypes from 'prop-types';\n\nfunction Button({ onClick }) {\n  return (\n    <button onClick={onClick} type=\"button\" className=\"Button\">\n      Load more\n    </button>\n  );\n}\n\n// Button.propTypes = {\n//   children: PropTypes.node.isRequired,\n// };\n\nexport default Button;\n","import ImageGalleryItem from './ImageGalleryItem';\nimport { Component, Fragment } from 'react';\nimport imageAPI from '../../services/imageAPI';\nimport Button from '../Button/Button';\nimport { toast } from 'react-toastify';\nimport Loader from 'react-loader-spinner';\n\nclass ImageGallery extends Component {\n  state = {\n    images: [],\n    status: 'idle',\n    page: 1,\n    error: null,\n    loader: true,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevSearchQuery = prevProps.query;\n    const nextSearchQuery = this.props.query;\n\n    const prevPage = prevState.page;\n    const nextPage = this.state.page;\n\n    if (prevSearchQuery !== nextSearchQuery) {\n      this.setState({ loader: true });\n      imageAPI\n        .fetchImage(nextSearchQuery, 1)\n        .then(images => {\n          this.setState({\n            images: images,\n            status: 'resolved',\n            loader: false,\n          });\n          if (images.length === 0) {\n            toast.warn(\n              'No results were found for this request, please enter a more specific request',\n            );\n          }\n        })\n        .catch(error => this.setState({ error, status: 'rejected' }));\n    }\n\n    if (prevPage !== nextPage) {\n      this.setState({ loader: true });\n\n      imageAPI\n        .fetchImage(nextSearchQuery, nextPage)\n        .then(images => {\n          this.setState({\n            images: [...prevState.images, ...images],\n            status: 'resolved',\n            loader: false,\n          });\n\n          this.scrollToBottom();\n        })\n        .catch(error => this.setState({ error, status: 'rejected' }));\n    }\n  }\n\n  handleClickLoadMore = () => {\n    this.setState(prevState => ({ page: prevState.page + 1 }));\n  };\n\n  scrollToBottom = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  render() {\n    const { status, images, error, loader } = this.state;\n\n    if (status === 'idle') {\n      return <></>;\n    }\n    if (status === 'resolved') {\n      return (\n        <Fragment>\n          <ul className=\"ImageGallery\">\n            {images.map(({ tags, webformatURL }, index) => (\n              <ImageGalleryItem\n                key={index}\n                id={index}\n                tags={tags}\n                webformatURL={webformatURL}\n              />\n            ))}\n          </ul>\n          {images.length > 0 && <Button onClick={this.handleClickLoadMore} />}\n\n          <Loader\n            visible={loader}\n            className=\"Loader\"\n            type=\"ThreeDots\"\n            color=\"#00BFFF\"\n            height={80}\n            width={80}\n          />\n        </Fragment>\n      );\n    }\n\n    if (status === 'rejected') {\n      return <p>{error.message}</p>;\n    }\n  }\n}\n\nexport default ImageGallery;\n\n// toast.error(\"No results were found for this request, please enter a more specific request\")\n","import Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport { Component } from 'react';\n\n// import imageAPI from './services/imageAPI';\n\nclass App extends Component {\n  state = {\n    query: '',\n  };\n\n  handleSearch = query => {\n    this.setState({ query: query });\n  };\n\n  render() {\n    const { query } = this.state;\n    return (\n      <>\n        <Searchbar onSubmit={this.handleSearch} />\n        <ImageGallery query={query} />\n\n        <ToastContainer position=\"top-left\" autoClose={3000} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}